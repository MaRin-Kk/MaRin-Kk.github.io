<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用node.js连接mysql</title>
      <link href="2021/01/18/%E4%BD%BF%E7%94%A8node-js%E8%BF%9E%E6%8E%A5mysql/"/>
      <url>2021/01/18/%E4%BD%BF%E7%94%A8node-js%E8%BF%9E%E6%8E%A5mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>搭建博客有几天了，今天终于第一次写文章，有不足之处希望大家多多指正。</p><p>之前一直在网上搜寻node连接数据库的方法，看了很多文章加自学才学会，于是自己总结了一篇文章供人参考。</p><p>力求用简单通俗易懂的方法使读者明白连接的方式，好话不多说直奔主题</p><h3 id="一、准备工具"><a href="#一、准备工具" class="headerlink" title="一、准备工具"></a>一、准备工具</h3><p>1.mysql数据库+Navicat可视化工具（数据库表单已经建好）</p><p>2.vscode  (准备工作基本上不用说基本上都有)</p><h3 id="二-、准备工作"><a href="#二-、准备工作" class="headerlink" title="二 、准备工作"></a>二 、准备工作</h3><p>1.再vscode中新建文件夹，并再集成终端中打开</p><p>2.输入初始化命令<code>npm init -y</code></p><p>3.安装express 第三方模块：<code>npm i express</code></p><p>4.安装mysql第三方模块：<code>npm i mysql</code></p><p>安装完毕如下图显示：</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118153230650.png" alt="image-20210118153230650"></p><h3 id="三-、编写代码"><a href="#三-、编写代码" class="headerlink" title="三  、编写代码"></a>三  、编写代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>) <span class="comment">//引入express 模块</span></span><br><span class="line"><span class="keyword">const</span> app = express()       <span class="comment">//创建实例</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)   <span class="comment">//引入mysql 模块</span></span><br><span class="line"><span class="comment">// 创建数据库连接 填入数据库信息 </span></span><br><span class="line"><span class="keyword">const</span> conn = mysql.createConnection(&#123;</span><br><span class="line">  user:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  password:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">  host:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  database:<span class="string">&#x27;node&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 测试连接</span></span><br><span class="line">conn.connect(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err,<span class="string">&#x27;如果为null 就是连接成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 开启服务器</span></span><br><span class="line">app.listen(<span class="number">3000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;服务器在3000端口开启。。。。。&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>​     进入文件夹运行   node .\app.js</p><p>出现下图说明连接成功</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118154819320.png" alt="image-20210118154819320"></p><p>下面是增删改查的操作，以插入和查询为例</p><h4 id="1-插入功能"><a href="#1-插入功能" class="headerlink" title="1.插入功能"></a>1.插入功能</h4><p>在开启服务器代码上方增加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义路由(说白了就是网址)     </span></span><br><span class="line">app.get(<span class="string">&#x27;/a&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="keyword">let</span> sqlStr =  <span class="string">&quot;INSERT INTO student ( s_no, s_name )VALUES(20150015,&#x27;大帅比&#x27;)&quot;</span></span><br><span class="line">    <span class="comment">//执行mysql 语句</span></span><br><span class="line">    conn.query(sqlStr,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err,<span class="string">&#x27;如果为null，sql语句执行成功&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//成功后的页面显示</span></span><br><span class="line">    res.send(<span class="string">&#x27;插入成功&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>插入前</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160109633.png" alt="image-20210118160109633"></p><p>插入后</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160153000.png" alt="image-20210118160153000"></p><h4 id="2-查询功能"><a href="#2-查询功能" class="headerlink" title="2.查询功能"></a>2.查询功能</h4><p>在插入代码后添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询信息</span></span><br><span class="line">app.get(<span class="string">&#x27;/find&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="string">`SELECT * FROM student `</span></span><br><span class="line">    conn.query(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//返回的查询信息为result 然后将其显示在页面上</span></span><br><span class="line">        res.send(results)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>查询结果如图(没有排序比较乱):</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160511852.png" alt="image-20210118160511852"></p><h2 id="结语-：至此node连接数据库以及部分功能展示完毕-本文为作者第一篇文章，写的不好的地方见谅"><a href="#结语-：至此node连接数据库以及部分功能展示完毕-本文为作者第一篇文章，写的不好的地方见谅" class="headerlink" title="结语 ：至此node连接数据库以及部分功能展示完毕(本文为作者第一篇文章，写的不好的地方见谅)"></a>结语 ：至此node连接数据库以及部分功能展示完毕(本文为作者第一篇文章，写的不好的地方见谅)</h2>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用node.js连接mysql数据库</title>
      <link href="2021/01/18/%E4%BD%BF%E7%94%A8node.js%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2021/01/18/%E4%BD%BF%E7%94%A8node.js%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>搭建博客有几天了，今天终于第一次写文章，有不足之处希望大家多多指正。</p><p>之前一直在网上搜寻node连接数据库的方法，看了很多文章加自学才学会，于是自己总结了一篇文章供人参考。</p><p>力求用简单通俗易懂的方法使读者明白连接的方式，好话不多说直奔主题</p><h3 id="一、准备工具"><a href="#一、准备工具" class="headerlink" title="一、准备工具"></a>一、准备工具</h3><p>1.mysql数据库+Navicat可视化工具（数据库表单已经建好）</p><p>2.vscode  (准备工作基本上不用说基本上都有)</p><h3 id="二-、准备工作"><a href="#二-、准备工作" class="headerlink" title="二 、准备工作"></a>二 、准备工作</h3><p>1.再vscode中新建文件夹，并再集成终端中打开</p><p>2.输入初始化命令<code>npm init -y</code></p><p>3.安装express 第三方模块：<code>npm i express</code></p><p>4.安装mysql第三方模块：<code>npm i mysql</code></p><p>安装完毕如下图显示：</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118153230650.png" alt="image-20210118153230650"></p><h3 id="三-、编写代码"><a href="#三-、编写代码" class="headerlink" title="三  、编写代码"></a>三  、编写代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>) <span class="comment">//引入express 模块</span></span><br><span class="line"><span class="keyword">const</span> app = express()       <span class="comment">//创建实例</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>)   <span class="comment">//引入mysql 模块</span></span><br><span class="line"><span class="comment">// 创建数据库连接 填入数据库信息 </span></span><br><span class="line"><span class="keyword">const</span> conn = mysql.createConnection(&#123;</span><br><span class="line">  user:<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  password:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">  host:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  database:<span class="string">&#x27;node&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 测试连接</span></span><br><span class="line">conn.connect(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err,<span class="string">&#x27;如果为null 就是连接成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 开启服务器</span></span><br><span class="line">app.listen(<span class="number">3000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;服务器在3000端口开启。。。。。&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>​     进入文件夹运行   node .\app.js</p><p>出现下图说明连接成功</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118154819320.png" alt="image-20210118154819320"></p><p>下面是增删改查的操作，以插入和查询为例</p><h4 id="1-插入功能"><a href="#1-插入功能" class="headerlink" title="1.插入功能"></a>1.插入功能</h4><p>在开启服务器代码上方增加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义路由(说白了就是网址)     </span></span><br><span class="line">app.get(<span class="string">&#x27;/a&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="keyword">let</span> sqlStr =  <span class="string">&quot;INSERT INTO student ( s_no, s_name )VALUES(20150015,&#x27;大帅比&#x27;)&quot;</span></span><br><span class="line">    <span class="comment">//执行mysql 语句</span></span><br><span class="line">    conn.query(sqlStr,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err,<span class="string">&#x27;如果为null，sql语句执行成功&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//成功后的页面显示</span></span><br><span class="line">    res.send(<span class="string">&#x27;插入成功&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>插入前</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160109633.png" alt="image-20210118160109633"></p><p>插入后</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160153000.png" alt="image-20210118160153000"></p><h4 id="2-查询功能"><a href="#2-查询功能" class="headerlink" title="2.查询功能"></a>2.查询功能</h4><p>在插入代码后添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询信息</span></span><br><span class="line">app.get(<span class="string">&#x27;/find&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="string">`SELECT * FROM student `</span></span><br><span class="line">    conn.query(sql,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//返回的查询信息为result 然后将其显示在页面上</span></span><br><span class="line">        res.send(results)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>查询结果如图(没有排序比较乱):</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20210118160511852.png" alt="image-20210118160511852"></p><h2 id="结语-：至此node连接数据库以及部分功能展示完毕-本文为作者第一篇文章，写的不好的地方见谅"><a href="#结语-：至此node连接数据库以及部分功能展示完毕-本文为作者第一篇文章，写的不好的地方见谅" class="headerlink" title="结语 ：至此node连接数据库以及部分功能展示完毕(本文为作者第一篇文章，写的不好的地方见谅)"></a>结语 ：至此node连接数据库以及部分功能展示完毕(本文为作者第一篇文章，写的不好的地方见谅)</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/04/hello-world/"/>
      <url>2021/01/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
